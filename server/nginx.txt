
nginx(ubuntu)
	简介：是一个高性能的HTTP和反向代理web服务器

服务
	查看nginx进程：ps -ef|grep nginx
	开启nginx服务：service nginx start
	关闭nginx服务：service nginx stop
	重载nginx服务：service nginx restart

配置文件
	# 全局块
	# worker_processes nginx工作进程数，worker_processes 数值越大处理并发量越大，单受硬件软件限制，可等于cpu核心数
	worker_processes  1;

	error_log  /var/log/nginx/error.log warn;
	pid        /var/run/nginx.pid;

	# events worker_connections 支持最大连接数
	events {
	    worker_connections  1024;
	}

	# http全局块 server块
	http {
	    include       /etc/nginx/mime.types;
	    default_type  application/octet-stream;

	    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
	                      '$status $body_bytes_sent "$http_referer" '
	                      '"$http_user_agent" "$http_x_forwarded_for"';

	    access_log  /var/log/nginx/access.log  main;

	    sendfile        on;
	    #tcp_nopush     on;

	    keepalive_timeout  65;

	    #gzip  on;

	    server{
	    	listen 80;
	    	server_name zsj.blog.com;
	    	location / {
	    		root html;
	    		index index.html;
	    	}
	    }

	    # 连接外部server块
	    include /etc/nginx/conf.d/*.conf; 

	}



nginx反向代理
	server{
	    listen 80;
	    server_name 47.102.40.50;
	    location ~ /z/ {
	        proxy_pass http://127.0.0.1:5001;
	    }
	    location ~ /w/ {
	        proxy_pass http://127.0.0.1:5002;
	    }
	}

nginx负载均衡
	配置多台服务器，将负载分发到不同的服务器上	
	分配服务器策略
		轮询（默认）： 按照时间顺序逐一分配到服务器上，自动提出down掉的服务器
			upstream myserver_name{
				server 127.0.0.1:8000;
				server 127.0.0.1:8001;
			}
			location / {
				proxy_pass http://myserver_name;
			}
		weight :权重策略，weight=10,权重越大负载越大
			upstream myserver_name{
				server 127.0.0.1:8000 weight=5;
				server 127.0.0.1:8001 weight=10;
			}
		ip_hash:根据IP分配服务器，每个IP访客固定一个服务器，解决session问题 
			upstream myserver_name{
				ip_hash;
				server 127.0.0.1:8000;
				server 127.0.0.1:8001;	
			}
		fair第三方:按服务器响应时间
		least_conn:最小连接数分配规则


nginx动静分离
	静态资源放在独立服务器上，常用通过单独的域名访问的方式
	location{
		root /data/;
		autoindex no;
	}
