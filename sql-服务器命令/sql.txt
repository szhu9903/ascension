选择 ：select * from table where 范围

插入 ：insert into table(field1,field2) value(value1,value2)

删除 ：delete from table where 范围

更新 ：update table set field1=value1 where 范围

查找 ：select * from table where field1 like '%value1%'

排序 ：select * from table order by field1,field2 [desc]
asc 按升序排列
desc 按降序排列

分页 ：select name from table order by id desc limit 3 offset 0 (倒序，结果集分页，取三条数据，从0开始索引) 
LIMIT总是设定为pageSize；
OFFSET计算公式为pageSize * (pageIndex - 1)。

总数 ：select count as totalcount from table1

求和：select sum(field1) as sumvalue from table1

平均：select avg(field1) as avgvalue from table1

最大：select max(field1) as maxvalue from table1

最小：select min(field1) as minvalue from table1


时间格式 ：to_char(t1.create_date AT TIME ZONE 'Etc/GMT+8','YYYY-MM-DD HH:MM:SS') as create_date

多表查询 ：from oz_th_repair t1 left join oz_th_dict t2 on t2.flabel = t1.frepair_type
left join(左联接) 返回包括左表中的所有记录和右表中联结字段相等的记录 
right join(右联接) 返回包括右表中的所有记录和左表中联结字段相等的记录
inner join(等值连接) 只返回两个表中联结字段相等的行

分组 ：GROUP BY 语句用于结合聚合函数，根据一个或多个列对结果集进行分组

复制表数据：insert into student(name,age) select name,age from student  （将查询出来的数据插入表中）



-- 数据库优化查询
-- 聚集索引存储记录是物理上连续存在，而非聚集索引是逻辑上的连续，物理存储并不连续。
建立索引的原则：

1) 定义主键的数据列一定要建立索引。

2) 定义有外键的数据列一定要建立索引。

3) 对于经常查询的数据列最好建立索引。

4) 对于需要在指定范围内的快速或频繁查询的数据列;

5) 经常用在WHERE子句中的数据列。

6) 经常出现在关键字order by、group by、distinct后面的字段，建立索引。如果建立的是复合索引，索引的字段顺序要和这些关键字后面的字段顺序一致，否则索引不会被使用。

7) 对于那些查询中很少涉及的列，重复值比较多的列不要建立索引。

8) 对于定义为text、image和bit的数据类型的列不要建立索引。

9) 对于经常存取的列避免建立索引 

9) 限制表上的索引数目。对一个存在大量更新操作的表，所建索引的数目一般不要超过3个，最多不要超过5个。索引虽说提高了访问速度，但太多索引会影响数据的更新操作。

10) 对复合索引，按照字段在查询条件中出现的频度建立索引。在复合索引中，记录首先按照第一个字段排序。对于在第一个字段上取值相同的记录，系统再按照第二个字段的取值排序，以此类推。因此只有复合索引的第一个字段出现在查询条件中，该索引才可能被使用,因此将应用频度高的字段，放置在复合索引的前面，会使系统最大可能地使用此索引，发挥索引的作用。

建立索引：[唯一索引，全文索引，空间索引]
    create [UNIQUE|FULLTEXT|SPATIAL] index index_name 
    [USING index]
    index_name : 自定义的索引的名称

创建视图



创建存储过程

















-- distinct 显示记录不重复
SELECT DISTINCT
	ffood_name 
FROM
	oz_th_food
	
	
-- 处理null，默认'0':
COALESCE(fdish_greens,'0') as fish_greens


-- 当查询到空值默认设置为‘0’
SELECT
	ffood_num,
	ffood_name,
CASE  WHEN fdish_meat2 = '' THEN '0' 
ELSE fdish_meat
	END

FROM
	oz_th_food
	
	
	
	-- having对分组查询数据使用聚合函数筛选
	
SELECT
	ffood_time_type,
	avg( fprice ) 
FROM
	oz_th_food 
GROUP BY
	ffood_time_type 
HAVING
	avg( fprice ) <3



-- string对分组的某个字段所有值显示，例如，一个房间所有的职工

SELECT
	l.ffloor_num,
	r.froom_num,
	string_agg ( r.fcheck_in_person_name,',' ) as check_name
FROM
	oz_th_check_in_record AS r
	LEFT JOIN oz_th_room AS l ON r.froom_num = l.froom_num 
WHERE
	r.fdel_flag = '0' 
GROUP BY
	l.ffloor_num,r.froom_num 
ORDER BY
	r.froom_num ASC



-- 时间转换

SELECT create_date,to_char(create_date,'YYYY-MM-DD') as dates from   oz_th_cost_detail


-- sqlserver 分页

select top 10 * from person 
where id not in(
select top 40 id from person order by id
) order by id

-- sql 存储过程
USE [hxrpt]
GO
/****** Object:  StoredProcedure [dbo].[hx_proc_经营费用明细表]    Script Date: 2019/7/23 13:55:40 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER proc [dbo].[hx_proc_经营费用明细表]
 @fgs varchar(100),
 @fyear int,
 @fmonth int
as
set nocount on

/*
declare @fgs varchar(100)
declare @fyear int
declare @fmonth int

select @fgs=86,@fyear=2019,@fmonth=6
*/
create table #t 
(
fsjacctno varchar(100) default '',
fsjacctname varchar(100) default '',
facctno varchar(100) default '',
facctname varchar(100) default '',
fdyje decimal(28,2) default 0,
fsyje decimal(28,2) default 0,
fsntq decimal(28,2) default 0,
fysycy decimal(28,2) default 0,
fysncy decimal(28,2) default 0,
fbnlj decimal(28,2) default 0,
fhblj decimal(28,2) default 0,
fsnlj decimal(28,2) default 0
)

declare @acct as table 
(
fnumber varchar(255) default '',
fname varchar(255) default ''
)

declare @rpt as table
(
fsjacctno varchar(100) default '',
fsjacctname varchar(100) default '',
facctno varchar(100) default '',
facctname varchar(100) default '',
fdyje decimal(28,2) default 0,
fsyje decimal(28,2) default 0,
fsntq decimal(28,2) default 0,
fysycy decimal(28,2) default 0,
fysncy decimal(28,2) default 0,
fbyzxsebl decimal(28,2) default 0,
fsyzxsebl decimal(28,2) default 0,
fsntqzxsebl decimal(28,2) default 0,
fbnlj decimal(28,2) default 0,
fhblj decimal(28,2) default 0,
fsnlj decimal(28,2) default 0,
fbnljzxsbl decimal(28,2) default 0,
fhbzxsbl decimal(28,2) default 0,
fsnljzxsbl decimal(28,2) default 0
)

declare @rpt1 as table
(
fsjacctno varchar(100) default '',
fsjacctname varchar(100) default '',
facctno varchar(100) default '',
facctname varchar(100) default '',
fdyje varchar(100) default '',
fsyje varchar(100) default '',
fsntq varchar(100) default '',
fysycy varchar(100) default '',
fysncy varchar(100) default '',
fbyzxsebl varchar(100) default '',
fsyzxsebl varchar(100) default '',
fsntqzxsebl varchar(100) default '',
fbnlj varchar(100) default '',
fhblj varchar(100) default '',
fsnlj varchar(100) default '',
fbnljzxsbl varchar(100) default '',
fhbzxsbl varchar(100) default '',
fsnljzxsbl varchar(100) default ''
)



insert into #t(facctno,facctname,fdyje,fsyje)
select 
'','销售额',FAmount,0 from Oz_LrbTemp t1
left join oz_vw_gs t2 on t1.FGsID=t2.id
where fyear=@fyear and fmonth=@fmonth and FIndex=10 and
FGsID=@fgs
union all
select 
'','销售额',-FAmount,0 from Oz_LrbTemp t1
left join oz_vw_gs t2 on t1.FGsID=t2.id
where fyear=@fyear and fmonth=@fmonth and FIndex=13 and
FGsID=@fgs
union all
select 
'','销售额',0,FAmount from Oz_LrbTemp t1
left join oz_vw_gs t2 on t1.FGsID=t2.id
where FYear=case when @fmonth=1 then  @fyear-1 else @fyear end and
fmonth=case when @fmonth=1 then 12 else @fmonth end and FIndex=10 and
FGsID=@fgs
union all
select 
'','销售额',0,-FAmount from Oz_LrbTemp t1
left join oz_vw_gs t2 on t1.FGsID=t2.id
where FYear=case when @fmonth=1 then  @fyear-1 else @fyear end and
fmonth=case when @fmonth=1 then 12 else @fmonth end
 and FIndex=13 and
FGsID=@fgs


insert into #t(facctno,facctname,fsntq)
select 
'','销售额',FAmount from Oz_LrbTemp t1
left join oz_vw_gs t2 on t1.FGsID=t2.id
where fyear=@fyear-1 and fmonth=@fmonth and FIndex=10 and
FGsID=@fgs
union all
select 
'','销售额',-FAmount from Oz_LrbTemp t1
left join oz_vw_gs t2 on t1.FGsID=t2.id
where fyear=@fyear-1 and fmonth=@fmonth and FIndex=13 and
FGsID=@fgs


insert into #t(facctno,facctname,fbnlj)
select 
'','销售额',FAmount from Oz_LrbTemp t1
left join oz_vw_gs t2 on t1.FGsID=t2.id
where fyear=@fyear and fmonth<=@fmonth and FIndex=10 and
FGsID=@fgs
union all
select 
'','销售额',-FAmount from Oz_LrbTemp t1
left join oz_vw_gs t2 on t1.FGsID=t2.id
where fyear=@fyear and fmonth<=@fmonth and FIndex=13 and
FGsID=@fgs

insert into #t(facctno,facctname,fsnlj)
select 
'','销售额',FAmount from Oz_LrbTemp t1
left join oz_vw_gs t2 on t1.FGsID=t2.id
where fyear=@fyear-1 and fmonth<=@fmonth and FIndex=10 and
FGsID=@fgs
union all
select 
'','销售额',-FAmount from Oz_LrbTemp t1
left join oz_vw_gs t2 on t1.FGsID=t2.id
where fyear=@fyear-1 and fmonth<=@fmonth and FIndex=13 and
FGsID=@fgs

--本年费用汇总数据、费用报销数据
insert into #t(facctno,facctname,fdyje,fsyje)
select facctno,facctname,fje,0 from oz_vw_fyhz where fgsid=@fgs and bbqjn=@fyear and bbqjy=@fmonth 
and left(facctno,4) in ('6601','6602','6603') and facctno not in ('6601.70','6601.71')
union all
select facctno,facctname,0,fje from oz_vw_fyhz where fgsid=@fgs and 
bbqjn=case when @fmonth=1 then  @fyear-1 else @fyear end and
bbqjy=case when @fmonth=1 then 12 else @fmonth end 
and left(facctno,4) in ('6601','6602','6603') and facctno not in ('6601.70','6601.71')

insert into #t(facctno,facctname,fdyje,fsyje)
select '6601.70','业务提成',famount,0 from Oz_LrbTemp
where  FGsID=@fgs and FYear=@fyear and fmonth=@fmonth  and FIndex =47
union all
select '6601.71','销售提成',famount,0 from Oz_LrbTemp
where  FGsID=@fgs and FYear=@fyear and fmonth=@fmonth  and FIndex =48
union all
select  '6603.21','存货占用利息',FAmount,0 from Oz_LrbTemp
where  FGsID=@fgs and FYear=@fyear and fmonth=@fmonth  and FIndex =71
union all
select '6601.70','业务提成',famount,0 from Oz_LrbTemp
where  FGsID=@fgs and
FYear=case when @fmonth=1 then  @fyear-1 else @fyear end and
fmonth=case when @fmonth=1 then 12 else @fmonth end and FIndex =47
union all
select '6601.71','销售提成',0,famount from Oz_LrbTemp
where  FGsID=@fgs and 
FYear=case when @fmonth=1 then  @fyear-1 else @fyear end and
fmonth=case when @fmonth=1 then 12 else @fmonth end and FIndex =48
union all
select  '6603.21','存货占用利息',0,famount from Oz_LrbTemp
where  FGsID=@fgs  and
FYear=case when @fmonth=1 then  @fyear-1 else @fyear end and
fmonth=case when @fmonth=1 then 12 else @fmonth end and FIndex =71

insert into #t(facctno,facctname,fsntq)
select '6601.70','业务提成',famount from Oz_LrbTemp
where  FGsID=@fgs and FYear=@fyear-1 and fmonth=@fmonth  and FIndex =47
union all
select '6601.71','销售提成',famount from Oz_LrbTemp
where  FGsID=@fgs and FYear=@fyear-1 and fmonth=@fmonth  and FIndex =48
union all
select  '6603.21','存货占用利息',FAmount from Oz_LrbTemp
where  FGsID=@fgs and FYear=@fyear-1 and fmonth=@fmonth  and FIndex =71
--同比上年费用汇总数据、费用报销数据

insert into #t(facctno,facctname,fsntq)
select facctno,facctname,fje from oz_vw_fyhz where fgsid=@fgs and bbqjn=@fyear-1 and bbqjy=@fmonth 
and left(facctno,4) in ('6601','6602','6603') and facctno not in ('6601.70','6601.71')



insert into #t(facctno,facctname,fysycy)
select facctno,facctname,sum(fdyje)-sum(fsyje) from #t
group by facctno,facctname

insert into #t(facctno,facctname,fysncy)
select facctno,facctname,sum(fdyje)-sum(fsntq) from #t
group by facctno,facctname


insert into #t(facctno,facctname,fbnlj)
select facctno,facctname,fje from oz_vw_fyhz where fgsid=@fgs and bbqjn=@fyear and bbqjy<=@fmonth 
and left(facctno,4) in ('6601','6602','6603') and facctno not in ('6601.70','6601.71')

insert into #t(facctno,facctname,fbnlj)
select '6601.70','业务提成',famount from Oz_LrbTemp
where  FGsID=@fgs and FYear=@fyear and fmonth<=@fmonth  and FIndex =47
union all
select '6601.71','销售提成',famount from Oz_LrbTemp
where  FGsID=@fgs and FYear=@fyear and fmonth<=@fmonth  and FIndex =48
union all
select  '6603.21','存货占用利息',FAmount from Oz_LrbTemp
where  FGsID=@fgs and FYear=@fyear and fmonth<=@fmonth  and FIndex =71


insert into #t(facctno,facctname,fsnlj)
select facctno,facctname,fje from oz_vw_fyhz where fgsid=@fgs and bbqjn=@fyear-1 and bbqjy<=@fmonth 
and left(facctno,4) in ('6601','6602','6603') and facctno not in ('6601.70','6601.71')

insert into #t(facctno,facctname,fsnlj)
select '6601.70','业务提成',famount from Oz_LrbTemp
where  FGsID=@fgs and FYear=@fyear-1 and fmonth<=@fmonth  and FIndex =47
union all
select '6601.71','销售提成',famount from Oz_LrbTemp
where  FGsID=@fgs and FYear=@fyear-1 and fmonth<=@fmonth  and FIndex =48
union all
select  '6603.21','存货占用利息',FAmount from Oz_LrbTemp
where  FGsID=@fgs and FYear=@fyear-1 and fmonth<=@fmonth  and FIndex =71

declare @fno int
select @fno=1 
while @fno<=@fmonth
begin
  insert into #t(facctno,facctname,fhblj)
  select facctno,facctname,fje from oz_vw_fyhz where fgsid=@fgs and bbqjn=@fyear-1 and bbqjy=12-@fno 
  and left(facctno,4) in ('6601','6602','6603') and facctno not in ('6601.70','6601.71')

  insert into #t(facctno,facctname,fhblj)
select '6601.70','业务提成',famount from Oz_LrbTemp
where  FGsID=@fgs and FYear=@fyear-1 and fmonth=12-@fno   and FIndex =47
union all
select '6601.71','销售提成',famount from Oz_LrbTemp
where  FGsID=@fgs and FYear=@fyear-1 and fmonth=12-@fno   and FIndex =48
union all
select  '6603.21','存货占用利息',FAmount from Oz_LrbTemp
where  FGsID=@fgs and FYear=@fyear-1 and fmonth=12-@fno  and FIndex =71

  insert into #t(facctno,facctname,fhblj)
select 
'','销售额',FAmount from Oz_LrbTemp t1
left join oz_vw_gs t2 on t1.FGsID=t2.id
where fyear=@fyear-1 and fmonth=12-@fno and FIndex=10 and
FGsID=@fgs
union all
select 
'','销售额',-FAmount from Oz_LrbTemp t1
left join oz_vw_gs t2 on t1.FGsID=t2.id
where fyear=@fyear-1 and fmonth=12-@fno and FIndex=13 and
FGsID=@fgs

  select @fno = @fno+1
end



insert into @acct(fnumber,fname)
select dm,name from openquery(hxrpt,
'select * from kjkm  where kmdj=''1''') where  left(dm,4) in ('6601','6602','6603')

update t1 set fsjacctno=isnull(t2.fnumber,''),fsjacctname=isnull(t2.fname,'')
from #t t1 
left join @acct  t2 on left(t1.facctno,4)=t2.fnumber

insert into @rpt(fsjacctno,fsjacctname,facctno,facctname,fdyje,fsyje,fsntq,fysycy,fysncy,fbnlj,fhblj,fsnlj)
select fsjacctno,fsjacctname,facctno,facctname,sum(fdyje),sum(fsyje),
sum(fsntq),sum(fysycy),sum(fysncy),
sum(fbnlj),sum(fhblj),sum(fsnlj) from #t 
group by facctno,facctname,fsjacctno,fsjacctname

insert into @rpt(fsjacctno,fsjacctname,facctno,facctname,fdyje,fsyje,fsntq,fysycy,fysncy,fbnlj,fhblj,fsnlj)
select fsjacctno,fsjacctname,fsjacctno,fsjacctname,sum(fdyje),sum(fsyje),
sum(fsntq),sum(fysycy),sum(fysncy),
sum(fbnlj),sum(fhblj),sum(fsnlj) from @rpt
group by fsjacctno,fsjacctname


delete from @rpt where ISNULL(facctname,'')=''

update t set fbyzxsebl=case when isnull(t1.fdyje,0)=0 then 0 else (t.fdyje/t1.fdyje)*100 end, 
fsyzxsebl=case when isnull(t1.fsyje,0)=0 then 0 else (t.fsyje/t1.fsyje)*100 end,
fsntqzxsebl=case when isnull(t1.fsntq,0)=0 then 0 else (t.fsntq/t1.fsntq)*100 end,
fbnljzxsbl=case when isnull(t1.fbnlj,0)=0 then 0 else (t.fbnlj/t1.fbnlj)*100 end,
fhbzxsbl=case when isnull(t1.fhblj,0)=0 then 0 else (t.fhblj/t1.fhblj)*100 end,
fsnljzxsbl=case when isnull(t1.fsnlj,0)=0 then 0 else (t.fsnlj/t1.fsnlj)*100 end
from @rpt t
left join @rpt t1 on t1.facctname = '销售额'

update @rpt set fbyzxsebl=0,fsyzxsebl=0,fsntqzxsebl=0,fbnljzxsbl=0,fhbzxsbl=0,fsnljzxsbl=0
 where facctname = '销售额'

insert into @rpt1(fsjacctno,fsjacctname,facctno,facctname,fdyje,fsyje,fsntq,fysycy,fysncy,
fbyzxsebl,fsyzxsebl,fsntqzxsebl,fbnlj,fhblj,fsnlj,fbnljzxsbl,fhbzxsbl,fsnljzxsbl)
select * from @rpt

select facctno,facctname,fdyje,fsyje,fysycy,fsntq,fysncy,fbyzxsebl,
fsyzxsebl,fsntqzxsebl,fbnlj,fhblj,fsnlj,fbnljzxsbl,fhbzxsbl,fsnljzxsbl
from @rpt1 order by facctno

drop table #t 

set nocount off




















































